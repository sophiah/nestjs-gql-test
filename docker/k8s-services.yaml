apiVersion: v1
kind: Namespace
metadata:
  name: service-demo 

---
### otel-collector-conf
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-demo-otel-collector-conf
  namespace: service-demo
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      # Dummy receiver that's never used, because a pipeline is required to have one.
      otlp/spanmetrics:
        protocols:
          grpc:
            endpoint: 0.0.0.0:12346

    processors:
      # compresses the data into batches and optimizes data transmission
      batch:
      # extracts the metrics from spans
      spanmetrics:
        # metrics_exporter = prometheus, export to exporters.prometheus
        metrics_exporter: prometheus
        # defines the histogram buckets
        latency_histogram_buckets:
          [50ms, 100ms, 150ms, 200ms, 400ms, 500ms, 800ms, 1s, 1200ms, 1400ms, 1600ms, 1800ms, 2s, 5s, 7s]

    exporters:
      # Jaeger backend
      zipkin:
        endpoint: "http://zipkin-all-in-one:9411/api/v2/spans"
      
      # defines an endpoint for prometheus
      prometheus:
        endpoint: "0.0.0.0:9464"

    # configure what components are enabled
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [spanmetrics, batch]
          exporters: [zipkin]
        metrics:
          receivers: [otlp/spanmetrics]
          # processors: [batch]
          exporters: [prometheus]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-demo-otel-collector
  namespace: service-demo
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: opentelemetry
      component: otel-collector
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.38.0
        ports:
        - containerPort: 9464 # for prometheus metrics
        - containerPort: 4317 # oltp grpc
        - containerPort: 4318 # oltp http
        - containerPort: 55681
        volumeMounts:
        - name: collector-conf-vol
          mountPath: /etc/otel
          readOnly: true
      volumes:
        - name: collector-conf-vol
          configMap:
            name: service-demo-otel-collector-conf
            items:
            - key: config.yaml
              path: config.yaml
          

---
apiVersion: v1
kind: Service
metadata:
  name: service-demo-otel-collector
  namespace: service-demo
spec:
  selector:
    app: opentelemetry
  ports:
    - name: http-for-prometheus-metrics
      protocol: TCP
      targetPort: 9464
      port: 9464
    - name: otlp-grpc
      protocol: TCP
      targetPort: 4317
      port: 4317
    - name: otlp-http
      protocol: TCP
      targetPort: 4318
      port: 4318
      
